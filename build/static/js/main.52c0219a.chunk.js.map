{"version":3,"sources":["components/NavBar.js","components/FontFamilies.js","components/FontSize.js","components/LineSpace.js","components/FontSettings.js","components/WordCount.js","components/PageCount.js","components/Thresholds.js","components/TotalTime.js","App.jsx","reportWebVitals.js","index.js","../node_modules/@firebase/util/dist sync"],"names":["React","Component","fontFamilies","FontFamilies","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getInputValue","e","parentCallback","target","value","state","react_default","a","createElement","className","htmlFor","onChange","map","option","key","FontSize","type","title","id","min","step","max","name","react_numeric_input_default","precision","LineSpace","WordCount","PageCount","window","Swal","Thresholds","sendThr","setInterval","checkRoadblock","sendML","axios","post","wordCount","pageCount","then","res","console","log","data","fire","toFixed","text","icon","confirmButtonColor","cancelButtonColor","confirmButtonText","checkCompletion","get","handleCallbackOne","childData","setState","objectSpread","handleCallbackTwo","isRoadblock","isCompletion","open","n","supported","show","event","close","tag","_this2","iconHtml","catch","error","Promise","reject","_this3","notRun","ignore","now","Date","options","body","lang","dir","swRegistration","getNotifications","notifications","_this4","build_default","onRef","ref","timeout","onClick","handleRoadClick","handleCompClick","components_WordCount","components_PageCount","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","components_Thresholds","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.52c0219a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport * as mdb from 'mdb-ui-kit'; // lib\nimport { counter } from 'mdb-ui-kit'; // module\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            settings: true,\n            notifs: false\n        };\n    }\n    setClicked() {\n        this.setState({\n            settings: true,\n            notifs: false\n        })\n    }\n    notifsClicked() {\n        this.setState({\n            settings: false,\n            notifs: true\n        })\n    }\n    render() {\n\n        let set = this.state.settings ? \"green\" : \"white\";\n        let notif = this.state.notifs ? \"green\" : \"white\";\n        let settingsBtn = <button id=\"Settings\" className={set} onClick={this.setClicked.bind(this)} autoFocus >Settings</button>;\n        let notificationsBtn = <button id=\"Notifications\" className={notif} onClick={this.notifsClicked.bind(this)}>\n           \n            Notifications</button>;\n        return (\n            <section className='NavWrap'>\n                {settingsBtn}\n                {notificationsBtn}\n                { /* <span className=\"counter counter-lg\">9</span> */ }\n            </section>\n        )\n    }\n}\n\nexport default NavBar","import React, { useState } from 'react'\n\nconst fontFamilies = [\"Select an Option\", \"First Option\", \"Second Option\", \"Third Option\"];\nclass FontFamilies extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { value: 'Select an Option' };\n    }\n    // onChange= (e) => {\n    //     this.setState({\n    //         value: e.target.value\n    //     })\n    //     this.props.parentCallback(e.target.value);\n    // }\n    getInputValue = (e) =>{\n        this.props.parentCallback(e.target.value);\n    };\n    // onChange={this.onChange.bind(this)}\n    render() {\n        return (\n            <div className=\"form-group fontFamiliesSection\">\n                <label htmlFor=\"fontFamilies\">Font Family</label>\n                <select value={this.state.value} onChange={this.getInputValue} className=\"form-control\">\n                    {fontFamilies.map(option => {\n                        return <option value={option} key={option} >{option}</option>\n                    })}\n                </select>\n            </div>\n\n        )\n    }\n}\nexport default FontFamilies","import React from 'react'\nimport NumericInput from 'react-numeric-input';\n\nclass FontSize extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    getInputValue = (e) => {\n        this.props.parentCallback(e.target.value);\n    };\n    render() {\n        return (\n            <div className=\"form-group fontFamiliesSection\">\n                <label htmlFor=\"fontFamilies\">Font Size</label>\n                <input type=\"number\"\n                    title=\"Rate\"\n                    id=\"lineSpace\"\n                    className=\"form-control\"\n                    min=\"1\"\n                    step=\"1\"\n                    max=\"400\"\n                    onChange={this.getInputValue}\n                />\n                <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\n                    min=\"1\" max=\"400\" step={1} onChange={this.getInputValue}></input>\n                <NumericInput className=\"form-control\"\n                    value={12}\n                    min={0}\n                    max={400}\n                    step={1}\n                    precision={0}\n                    onChange={this.getInputValue} />\n            </div>\n\n        )\n    }\n} \n\nexport default FontSize","import React from 'react'\n\nclass LineSpace extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            LineSpace: '',\n        };\n    }\n\n    getInputValue = (e) =>{\n        this.props.parentCallback(e.target.value);\n    };\n    render() {\n        return (\n            <div className=\"form-group fontFamiliesSection\">\n                <label htmlFor=\"lineSpace\">Line Spacing</label>\n                <input type=\"number\"\n                    title=\"Rate\"\n                    id=\"lineSpace\"\n                    className=\"form-control\"\n                    min=\"1.0\"\n                    step=\"0.05\"\n                    max=\"2.0\"\n                    onChange={this.getInputValue}\n                />\n            </div>\n\n        )\n    }\n}\nexport default LineSpace","import React, { useState } from 'react'\nimport Collapse from 'react-bootstrap/Collapse';\nimport Button from 'react-bootstrap/Button';\nimport FontFamilies from './FontFamilies';\nimport FontSize from './FontSize';\nimport LineSpace from './LineSpace';\nimport axios from 'axios';\nimport reportValidity from 'report-validity'\n\nclass FontSettings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            LineSpace: '',\n            FontSize: 12,\n            FontFamily: '',\n            open: false,\n        };\n    }\n    // const [open, setOpen] = useState(false);\n    handleCallbackThree = (childData) =>{\n        console.log(childData);\n        this.setState({LineSpace: childData})\n    }\n    handleCallbackTwo = (childData) =>{\n        console.log(childData);\n        this.setState({FontSize: childData})\n    }\n    handleCallbackOne = (childData) =>{\n        console.log(childData);\n        this.setState({FontFamily: childData})\n    }\n    setOpen= (() => {\n        this.setState({open: !this.state.open})\n    })\n    sendFont = (() => {\n        let form = document.getElementById('fontSettingsList');\n        let res = reportValidity(form);\n        console.log(\"hi\")\n        if (res) {\n            \n            axios.post(\"http://127.0.0.1:8080/api/fonts/\", { LineSpace: this.state.LineSpace,\n                                                            FontSize: this.state.FontSize,\n                                                            FontFamily: this.state.FontFamily })\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                })\n        }\n    }\n    )\n    render() {\n        return (\n            <div className='fontSettings' >\n                <Button\n                    id='fontSettingsBtn'\n                    onClick={this.setOpen}\n                    aria-controls=\"fontSettingsList\"\n                    aria-expanded={this.state.open}\n                >\n                    Font Settings\n                </Button>\n                <Collapse in={this.state.open}>\n                    <form id=\"fontSettingsList\">\n                        <FontFamilies value={this.state.value}\n                            onChangeValue={this.handleChangeValue} \n                            parentCallback = {this.handleCallback}/> \n                        <FontFamilies parentCallback = {this.handleCallbackOne} />\n                        <FontSize parentCallback = {this.handleCallbackTwo} />\n                        <LineSpace parentCallback = {this.handleCallbackThree} />\n                        <button className=\"btn btn-success\" onClick={this.sendFont}>Submit</button>\n                    </form>\n                </Collapse>\n            </div>\n        )\n    }\n}\n\nexport default FontSettings","import React, { useState } from 'react'\nimport NumericInput from 'react-numeric-input'\n\nclass WordCount extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    // onChange(e) {\n    //     this.setState({\n    //         value: e.target.value\n    //     })\n    // }\n    getInputValue = (e) =>{\n        this.props.parentCallback(e.target.value);\n    };\n    render() {\n        return (\n            <div className=\"form-group wordCountSection\">\n                <label htmlFor=\"\" className='wordCountTitle'>Word Count Threshold</label>\n                <br/>\n                <label htmlFor=\"\" className='wordCount'>How many total words you want to write</label>\n                <input type=\"number\"\n                    title=\"Rate\"\n                    id=\"wordCount\"\n                    className=\"form-control\"\n                    min=\"0\"\n                    step=\"1\"\n                    onChange={this.getInputValue}\n                />\n                {/* <NumericInput className=\"form-control\"\n                    value={0}\n                    min={0}\n                    step={1}\n                    precision={0} /> */}\n            </div>\n\n        )\n    }\n}\nexport default WordCount","import React, { useState } from 'react'\nimport NumericInput from 'react-numeric-input'\n\nclass PageCount extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    // onChange(e) {\n    //     this.setState({\n    //         value: e.target.value\n    //     })\n    // }\n    getInputValue = (e) =>{\n        this.props.parentCallback(e.target.value);\n    };\n    render() {\n        return (\n            <div className=\"form-group pageCountSection\">\n                <label htmlFor=\"\" className='pageCountTitle'>Page Count Threshold</label>\n                <br/>\n                <label htmlFor=\"\" className='pageCount'>How many total pages you want to write</label>\n                <input type=\"number\"\n                    title=\"Rate\"\n                    id=\"pageCount\"\n                    className=\"form-control\"\n                    min=\"0\"\n                    step=\"1\"\n                    onChange={this.getInputValue}\n                />\n                {/* <NumericInput className=\"form-control\"\n                    value={0}\n                    min={0}\n                    step={1}\n                    precision={0} /> */}\n            </div>\n\n        )\n    }\n}\nexport default PageCount","// Import the functions you need from the SDKs you need\nimport React, { useState } from 'react';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Button from 'react-bootstrap/Button';\nimport WordCount from './WordCount';\nimport PageCount from './PageCount';\nimport axios from 'axios';\nimport reportValidity from 'report-validity'\nimport ReactNotifications from 'react-browser-notifications';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n// import Notification  from 'Notification';\nimport Swal from 'sweetalert2';\nwindow.Swal = Swal;\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n\n/*\nconst functions = require('firebase-functions');\nconst express = require('express');\n\nconst app = express();\n// middleware\napp.use(express.json({ extended: false }));\n\n// Define Routes\napp.use('/api/thr');\napp.use('/api/roadblock');\napp.use('/api/completion');\napp.use('/api/ml');\n*/\n\nclass Thresholds extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isRoadblock: false,\n            isCompletion: false,\n            wordCount: 0,\n            pageCount: 0,\n            open: false,\n            title: \"\"\n        };\n    }\n\n  showRoadblockNotifications() {\n      console.log(this.n.supported())\n      if (this.n.supported()); \n      this.n.show();\n  }\n\n  showCompNotifications() {\n      console.log(this.a.supported())\n      if (this.a.supported());\n      this.a.show();\n  }\n\n  handleRoadClick(event) {\n      this.n.close(event.target.tag);\n  }\n  handleCompClick(event) {\n      this.a.close(event.target.tag);\n  }\n\n  sendThr = (() => {\n    setInterval(() => {\n        this.checkRoadblock()\n    }, 5000);\n    // do this every 5 min\n    setInterval(() => {\n        this.sendML()\n    }, 300000);\n \n    let res = true;\n    if (res) {\n        axios.post(\"http://127.0.0.1:3001/api/thr/\", { wordCount: this.state.wordCount,\n                                                        pageCount: this.state.pageCount })\n            .then(res => {\n                console.log(res);\n                console.log(res.data['wordcount']);\n                /*\n                if (!res.ok) {\n                    Swal.fire(\n                        'Unsuccessful',\n                        'Unable to delete selected user. Please contact administrator.',\n                        'error'\n                    );\n                    return;\n                }\n                */\n                Swal.fire({\n                    title: 'We expect you to take ' + (res.data['wordcount']/60).toFixed(2) + ' minutes',\n                    text: \"\",\n                    icon: 'OK',\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: 'OK',\n                })\n            })\n    }\n\n      setInterval(() => {\n          this.checkCompletion()\n      }, 60000);\n  })\n\n  sendML = (() => {\n    axios.get(\"http://127.0.0.1:3001/api/ml/\")\n})\n\n  checkRoadblock() { \n    axios.get(\"http://127.0.0.1:3001/api/roadblock\") \n      .then(res => {\n              if (res.data[0] == 'True') {\n                  console.log(\"roadblock notifs\");\n                  this.state.isRoadblock = true;\n                  if (this.state.isRoadblock == true) {\n                      Swal.fire({\n                          title: 'You have approached a roadblock!',\n                          text: \"\",\n                          icon: 'OK',\n                          confirmButtonColor: '#3085d6',\n                          cancelButtonColor: '#d33',\n                          confirmButtonText: 'OK',\n                          iconHtml: '<img src=\"/src/components/sad_whale.png\">'\n                      })\n                      }   \n                      this.state.isRoadblock = false;\n                  }\n              // need to then set back to false!\n              // console.log(res);\n              // console.log(res.data);\n          }).catch (\n              function (error) {\n                  console.log('Show error notification! ' + error)\n                  return Promise.reject(error)\n               }\n          )\n      }\n\n  checkCompletion() {\n    axios.get(\"http://127.0.0.1:3001/api/completion\") \n          .then(res => {\n              if (res.data[0] == 'True') {\n                  this.state.notRun = true;\n                  console.log(\"completion notifs\");\n                  // this.showCompNotifications();\n                  this.state.isCompletion = true;\n                  if (this.state.isCompletion == true) {\n                  Swal.fire({\n                      title: 'You have completed your goal!',\n                      text: \"\",\n                      icon: 'OK',\n                      confirmButtonColor: '#3085d6',\n                      cancelButtonColor: '#d33',\n                      confirmButtonText: 'OK',\n                      iconHtml: '<img src=\"/src/components/happy_whale.png\">'\n                  })\n              }\n              this.state.isCompletion = false;\n              }\n              // console.log(res);\n              // console.log(res.data);\n          }).catch (\n              function (error) {\n                  console.log('Show error notification! ' + error)\n                  return Promise.reject(error)\n              }\n          )\n  }\n\n  handleCallbackOne = (childData) =>{\n      // console.log(childData);\n      // this.setState({LineSpace: childData})\n      this.setState({ ...this.state , wordCount: childData });\n  }\n\n  handleCallbackTwo = (childData) =>{\n      console.log(childData);\n      // this.setState({LineSpace: childData})\n      \n      this.setState({ ...this.state , pageCount: childData });\n  }\n\n  handleButtonClick() {\n      if(this.state.ignore) {\n        return;\n      }\n  \n      const now = Date.now();\n  \n      const title = 'React-Web-Notification' + now;\n      const body = 'Hello' + new Date();\n      const tag = now;\n      // const icon = 'http://mobilusoss.github.io/react-web-notification/example/Notifications_button_24.png';\n      // const icon = 'http://localhost:3000/Notifications_button_24.png';\n  \n      // Available options\n      // See https://developer.mozilla.org/en-US/docs/Web/API/Notification/Notification\n      const options = {\n        tag: tag,\n        body: body,\n        // icon: icon,\n        lang: 'en',\n        dir: 'ltr',\n        // sound: './sound.mp3'  // no browsers supported https://developer.mozilla.org/en/docs/Web/API/notification/sound#Browser_compatibility\n      }\n      this.setState({\n        title: title,\n        options: options\n      });\n    }\n  \n    handleButtonClick2() {\n      this.props.swRegistration.getNotifications({}).then(function(notifications) {\n        console.log(notifications);\n      });\n    }\n\n    // runServer() {\n      // fetch(\"/backend/runserver.py\")\n      // axios.post({\n          // type: \"POST\",\n          // url: \"/backend/runserver.py\",\n          // data: { param: text}\n        // })\n    // }\n\n  // const [open, setOpen] = useState(false);\n  render() {\n      return (\n          <div className='thresholdsList'>\n              <ReactNotifications\n                  onRef={ref => (this.n = ref)} \n                      title=\"You have approached a roadblock!\"\n                      body=\"You have approached a roadblock!\"\n                      tag=\"roadblock\"\n                      timeout=\"2000\"\n                  onClick={event => this.handleRoadClick(event)}\n              />\n              <ReactNotifications\n                  onRef={ref => (this.a = ref)} \n                      title=\"You have completed your goal!\"\n                      body=\"You have completed your goal!\"\n                      tag=\"completion\"\n                      timeout=\"2000\"\n                  onClick={event => this.handleCompClick(event)}\n              />\n              <div>\n                      {/* <button onClick={this.handleButtonClick.bind(this)}>Notify!</button> */}\n                      {/* {document.title === 'swExample' && <button onClick={this.handleButtonClick2.bind(this)}>swRegistration.getNotifications</button>}\n                      <Notification\n                      ignore={this.state.ignore && this.state.title !== ''}\n                      // notSupported={this.handleNotSupported.bind(this)}\n                      // onPermissionGranted={this.handlePermissionGranted.bind(this)}\n                      // onPermissionDenied={this.handlePermissionDenied.bind(this)}\n                      // onShow={this.handleNotificationOnShow.bind(this)}\n                      timeout={5000}\n                      title={this.state.title}\n                      options={this.state.options}\n                      swRegistration={this.props.swRegistration}\n                    /> */}\n                  </div>\n              <div id=\"thresholdsList\">\n                  <WordCount parentCallback = {this.handleCallbackOne} />\n                  <PageCount parentCallback = {this.handleCallbackTwo}/>\n                  <button className=\"btn btn-success\" onClick={this.sendThr}>submit</button>\n              </div>\n          </div>)\n      }\n}\n\n// exports.api = functions.https.onRequest(app);\nexport default Thresholds","import React, { useState } from 'react'\nimport NumericInput from 'react-numeric-input'\nimport reportValidity from 'report-validity'\nimport axios from 'axios';\n\nclass TotalTime extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { Time: 0 };\n    }\n    // onChange(e) {\n    //     this.setState({\n    //         value: e.target.value\n    //     })\n    // }\n    // getInputValue = (e) =>{\n    //     this.props.parentCallback(e.target.value);\n    // };\n    getInputValue = (event) => {\n        // show the user input value to console\n        this.setState({ Time: event.target.value });\n        // console.log(userValue);\n    }\n    sendTime = (() => {\n        let form = document.getElementById('totalTimeSection');\n        let res = reportValidity(form);\n        if (res) {\n            axios.post(\"http://127.0.0.1:8080/api/time/\", { totalTime: this.state.Time })\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                })\n        }\n    }\n    )\n    render() {\n        return (\n            <div>\n                <form id='totalTimeSection'>\n                    <label htmlFor=\"\" className='totalTimeTitle'>Total Estimated Time (in minutes)</label>\n                    <br />\n                    <label htmlFor=\"\" className='totalTime'>Time estimated to complete assignment</label>\n                    <input type=\"number\"\n                        title=\"Rate\"\n                        id=\"totalTime\"\n                        className=\"form-control\"\n                        min=\"0\"\n                        max=\"6000\"\n                        step=\"1\"\n                        onChange={this.getInputValue}\n                    />\n                    <button className=\"btn btn-success\" onClick={this.sendTime}>Submit</button>\n                    {/* <NumericInput className=\"form-control\"\n                    value={0}\n                    min={0}\n                    step={1}\n                    precision={0} /> */}\n                </form>\n            </div>\n\n        )\n    }\n}\nexport default TotalTime","import NavBar from \"./components/NavBar\";\nimport FontSettings from \"./components/FontSettings\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport { initializeApp } from \"firebase/app\";\n// import App from './App';\nimport Thresholds from \"./components/Thresholds\";\nimport DocURL from \"./components/DocURL\";\nimport TotalTime from \"./components/TotalTime\";\n\nfunction App() {\n  const firebaseConfig = { \n    apiKey: \"AIzaSyBbqaOCwIZocSgjT1-Z1JAlWlr5obER7Z0\",\n    authDomain: \"cruise-e8304.firebaseapp.com\",\n    projectId: \"cruise-e8304\",\n    storageBucket: \"cruise-e8304.appspot.com\",\n    messagingSenderId: \"665446251636\",\n    appId: \"1:665446251636:web:4bb27580e5f968c112a521\",\n    measurementId: \"G-4B33G21KR0\"\n  };\n\n  // const admin = require('firebase-admin');\n  initializeApp(firebaseConfig)\n\n  return (\n    <div className=\"App\">\n      {/* <NavBar /> */}\n      { /* <TotalTime /> */ }\n      {/* <DocURL /> */}\n      {/* <FontSettings /> */}\n      <Thresholds />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 99;"],"sourceRoot":""}