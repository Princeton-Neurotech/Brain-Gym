{"version":3,"sources":["components/NavBar.js","components/FontFamilies.js","components/FontSize.js","components/LineSpace.js","components/FontSettings.js","components/WordCount.js","components/PageCount.js","components/Thresholds.js","components/TotalTime.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","settings","notifs","setState","set","notif","settingsBtn","react_default","a","createElement","id","className","onClick","setClicked","bind","autoFocus","notificationsBtn","notifsClicked","React","Component","fontFamilies","FontFamilies","getInputValue","e","parentCallback","target","value","htmlFor","onChange","map","option","key","FontSize","type","title","min","step","max","LineSpace","FontSettings","handleCallbackThree","childData","console","log","handleCallbackTwo","handleCallbackOne","FontFamily","setOpen","open","sendFont","form","document","getElementById","reportValidity","axios","post","then","res","data","Button","aria-controls","aria-expanded","Collapse","in","components_FontFamilies","components_FontSize","components_LineSpace","WordCount","PageCount","Thresholds","setRoadblock","setInterval","checkRoadblock","setCompletion","checkCompletion","sendThr","wordCount","pageCount","isRoadblock","isCompletion","n","supported","show","event","close","tag","_this2","get","showRoadblockNotifications","_this3","showCompNotifications","_this4","build_default","onRef","ref","body","handleRoadClick","handleCompClick","components_WordCount","components_PageCount","TotalTime","Time","sendTime","totalTime","App","components_NavBar","components_TotalTime","components_FontSettings","components_Thresholds","reportWebVitals","onPerfEntry","Function","__webpack_require__","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4b391340.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport * as mdb from 'mdb-ui-kit'; // lib\nimport { counter } from 'mdb-ui-kit'; // module\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            settings: true,\n            notifs: false\n        };\n    }\n    setClicked() {\n        this.setState({\n            settings: true,\n            notifs: false\n        })\n    }\n    notifsClicked() {\n        this.setState({\n            settings: false,\n            notifs: true\n        })\n    }\n    render() {\n\n        let set = this.state.settings ? \"green\" : \"white\";\n        let notif = this.state.notifs ? \"green\" : \"white\";\n        let settingsBtn = <button id=\"Settings\" className={set} onClick={this.setClicked.bind(this)} autoFocus >Settings</button>;\n        let notificationsBtn = <button id=\"Notifications\" className={notif} onClick={this.notifsClicked.bind(this)}>\n           \n            Notifications</button>;\n        return (\n            <section className='NavWrap'>\n                {settingsBtn}\n                {notificationsBtn}\n                <span className=\"counter counter-lg\">9</span>\n            </section>\n        )\n    }\n}\n\nexport default NavBar","import React, { useState } from 'react'\n\nconst fontFamilies = [\"Select an Option\", \"First Option\", \"Second Option\", \"Third Option\"];\nclass FontFamilies extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { value: 'Select an Option' };\n    }\n    // onChange= (e) => {\n    //     this.setState({\n    //         value: e.target.value\n    //     })\n    //     this.props.parentCallback(e.target.value);\n    // }\n    getInputValue = (e) =>{\n        this.props.parentCallback(e.target.value);\n    };\n    // onChange={this.onChange.bind(this)}\n    render() {\n        return (\n            <div className=\"form-group fontFamiliesSection\">\n                <label htmlFor=\"fontFamilies\">Font Family</label>\n                <select value={this.state.value} onChange={this.getInputValue} className=\"form-control\">\n                    {fontFamilies.map(option => {\n                        return <option value={option} key={option} >{option}</option>\n                    })}\n                </select>\n            </div>\n\n        )\n    }\n}\nexport default FontFamilies","import React from 'react'\nimport NumericInput from 'react-numeric-input';\n\nclass FontSize extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    getInputValue = (e) => {\n        this.props.parentCallback(e.target.value);\n    };\n    render() {\n        return (\n            <div className=\"form-group fontFamiliesSection\">\n                <label htmlFor=\"fontFamilies\">Font Size</label>\n                <input type=\"number\"\n                    title=\"Rate\"\n                    id=\"lineSpace\"\n                    className=\"form-control\"\n                    min=\"1\"\n                    step=\"1\"\n                    max=\"400\"\n                    onChange={this.getInputValue}\n                />\n                {/* <input type=\"number\" id=\"tentacles\" name=\"tentacles\"\n                    min=\"1\" max=\"400\" step={1} onChange={this.getInputValue}></input> */}\n                {/* <NumericInput className=\"form-control\"\n                    value={12}\n                    min={0}\n                    max={400}\n                    step={1}\n                    precision={0}\n                    onChange={this.getInputValue} /> */}\n            </div>\n\n        )\n    }\n}\nexport default FontSize","import React from 'react'\n\nclass LineSpace extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            LineSpace: '',\n        };\n    }\n\n    getInputValue = (e) =>{\n        this.props.parentCallback(e.target.value);\n    };\n    render() {\n        return (\n            <div className=\"form-group fontFamiliesSection\">\n                <label htmlFor=\"lineSpace\">Line Spacing</label>\n                <input type=\"number\"\n                    title=\"Rate\"\n                    id=\"lineSpace\"\n                    className=\"form-control\"\n                    min=\"1.0\"\n                    step=\"0.05\"\n                    max=\"2.0\"\n                    onChange={this.getInputValue}\n                />\n            </div>\n\n        )\n    }\n}\nexport default LineSpace","import React, { useState } from 'react'\nimport Collapse from 'react-bootstrap/Collapse';\nimport Button from 'react-bootstrap/Button';\nimport FontFamilies from './FontFamilies';\nimport FontSize from './FontSize';\nimport LineSpace from './LineSpace';\nimport axios from 'axios';\nimport reportValidity from 'report-validity'\n\nclass FontSettings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            LineSpace: '',\n            FontSize: 12,\n            FontFamily: '',\n            open: false,\n        };\n    }\n    // const [open, setOpen] = useState(false);\n    handleCallbackThree = (childData) =>{\n        console.log(childData);\n        this.setState({LineSpace: childData})\n    }\n    handleCallbackTwo = (childData) =>{\n        console.log(childData);\n        this.setState({FontSize: childData})\n    }\n    handleCallbackOne = (childData) =>{\n        console.log(childData);\n        this.setState({FontFamily: childData})\n    }\n    setOpen= (() => {\n        this.setState({open: !this.state.open})\n    })\n    sendFont = (() => {\n        let form = document.getElementById('fontSettingsList');\n        let res = reportValidity(form);\n        \n        if (res) {\n            \n            axios.post(\"http://127.0.0.1:8080/api/fonts/\", { LineSpace: this.state.LineSpace,\n                                                            FontSize: this.state.FontSize,\n                                                            FontFamily: this.state.FontFamily })\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                })\n        }\n    }\n    )\n    render() {\n        return (\n            <div className='fontSettings' >\n                <Button\n                    id='fontSettingsBtn'\n                    onClick={this.setOpen}\n                    aria-controls=\"fontSettingsList\"\n                    aria-expanded={this.state.open}\n                >\n                    Font Settings\n                </Button>\n                <Collapse in={this.state.open}>\n                    <form id=\"fontSettingsList\">\n                        {/* <FontFamilies value={this.state.value}\n                            onChangeValue={this.handleChangeValue} \n                            parentCallback = {this.handleCallback}/> */}\n                        <FontFamilies parentCallback = {this.handleCallbackOne} />\n                        <FontSize parentCallback = {this.handleCallbackTwo} />\n                        <LineSpace parentCallback = {this.handleCallbackThree} />\n                        <button className=\"btn btn-success\" onClick={this.sendFont}>Submit</button>\n                    </form>\n                </Collapse>\n            </div>\n        )\n    }\n}\n\nexport default FontSettings","import React, { useState } from 'react'\nimport NumericInput from 'react-numeric-input'\n\nclass WordCount extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    // onChange(e) {\n    //     this.setState({\n    //         value: e.target.value\n    //     })\n    // }\n    getInputValue = (e) =>{\n        this.props.parentCallback(e.target.value);\n    };\n    render() {\n        return (\n            <div className=\"form-group wordCountSection\">\n                <label htmlFor=\"\" className='wordCountTitle'>Word Count Threshold</label>\n                <br/>\n                <label htmlFor=\"\" className='wordCount'>How many total words you want to write</label>\n                <input type=\"number\"\n                    title=\"Rate\"\n                    id=\"wordCount\"\n                    className=\"form-control\"\n                    min=\"0\"\n                    step=\"1\"\n                    onChange={this.getInputValue}\n                />\n                {/* <NumericInput className=\"form-control\"\n                    value={0}\n                    min={0}\n                    step={1}\n                    precision={0} /> */}\n            </div>\n\n        )\n    }\n}\nexport default WordCount","import React, { useState } from 'react'\nimport NumericInput from 'react-numeric-input'\n\nclass PageCount extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    // onChange(e) {\n    //     this.setState({\n    //         value: e.target.value\n    //     })\n    // }\n    getInputValue = (e) =>{\n        this.props.parentCallback(e.target.value);\n    };\n    render() {\n        return (\n            <div className=\"form-group pageCountSection\">\n                <label htmlFor=\"\" className='pageCountTitle'>Page Count Threshold</label>\n                <br/>\n                <label htmlFor=\"\" className='pageCount'>How many total pages you want to write</label>\n                <input type=\"number\"\n                    title=\"Rate\"\n                    id=\"pageCount\"\n                    className=\"form-control\"\n                    min=\"0\"\n                    step=\"1\"\n                    onChange={this.getInputValue}\n                />\n                {/* <NumericInput className=\"form-control\"\n                    value={0}\n                    min={0}\n                    step={1}\n                    precision={0} /> */}\n            </div>\n\n        )\n    }\n}\nexport default PageCount","import React, { useState } from 'react';\nimport Collapse from 'react-bootstrap/Collapse';\nimport Button from 'react-bootstrap/Button';\nimport WordCount from './WordCount';\nimport PageCount from './PageCount';\nimport axios from 'axios';\nimport reportValidity from 'report-validity'\nimport ReactNotifications from 'react-browser-notifications';\n\nclass Thresholds extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isRoadblock: false,\n            isCompletion: false,\n            wordCount: 0,\n            pageCount: 0,\n            open: false,\n        };\n    }\n\n    setRoadblock = () => {\n        setInterval(this.checkRoadblock()\n            , 1000)\n    }\n\n    setCompletion = () => {\n        setInterval(this.checkCompletion()\n            , 5000)\n    }\n\n    showRoadblockNotifications() {\n        console.log(this.n.supported())\n        if (this.n.supported()) this.n.show();\n    }\n\n    showCompNotifications() {\n        console.log(this.a.supported())\n        if (this.a.supported()) this.a.show();\n    }\n\n    handleRoadClick(event) {\n        this.n.close(event.target.tag);\n    }\n    handleCompClick(event) {\n        this.a.close(event.target.tag);\n    }\n\n    sendThr = (() => {\n        setInterval(() => {\n            this.checkRoadblock()\n        }, 1000);\n        let form = document.getElementById('fontSettingsList');\n        let res = reportValidity(form);\n        if (res) {\n            axios.post(\"http://127.0.0.1:3000/api/thr/\", { wordCount: this.state.wordCount,\n                                                            pageCount: this.state.pageCount })\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                })\n        }\n\n        setInterval(() => {\n            this.checkCompletion()\n        }, 5000);\n    })\n\n    checkRoadblock() {\n            axios.get(\"http://127.0.0.1:3000/api/roadblock/\")\n                .then(res => {\n                    if (res.data[0] == 'True') {\n                        this.showRoadblockNotifications();\n                        this.state.isRoadblock = true;\n                    }\n                    // need to then set back to false!\n                    // console.log(res);\n                    // console.log(res.data);\n                })\n        }\n\n    checkCompletion() {\n        axios.get(\"http://127.0.0.1:3000/api/completion/\")\n            .then(res => {\n                if (res.data[0] == 'True') {\n                    this.showCompNotifications();\n                    this.state.isCompletion = true;\n                }\n                // console.log(res);\n                // console.log(res.data);\n            })\n    }\n\n    handleCallbackOne = (childData) =>{\n        console.log(childData);\n        // this.setState({LineSpace: childData})\n        this.state.wordCount = childData;\n    }\n\n    handleCallbackTwo = (childData) =>{\n        console.log(childData);\n        // this.setState({LineSpace: childData})\n        this.state.pageCount = childData;\n    }\n    \n    // const [open, setOpen] = useState(false);\n    render(){\n        return (\n            <div className='thresholds'>\n                <ReactNotifications\n                    onRef={ref => (this.n = ref)} \n                        title=\"You have approached a roadblock!\"\n                        body=\"You have approached a roadblock!\"\n                        // tag=\"abcdef\"\n                        // timeout=\"2000\"\n                    onClick={event => this.handleRoadClick(event)}\n                />\n                <ReactNotifications\n                    onRef={ref => (this.a = ref)} \n                        title=\"You have completed your goal!\"\n                        body=\"You have completed your goal!\"\n                        // tag=\"abcdef\"\n                        // timeout=\"2000\"\n                    onClick={event => this.handleCompClick(event)}\n                />\n                <Button\n                    id='thresholdsBtn'\n                    onClick={() => {this.setState({open: !this.state.open})}}\n                    aria-controls=\"threshholdsList\"\n                    aria-expanded={this.state.open}\n                >\n                    Word and Page Count\n                </Button>\n                <Collapse in={this.state.open}>\n                    <div id=\"threshholdsList\">\n                        <WordCount parentCallback = {this.handleCallbackOne} />\n                        <PageCount parentCallback = {this.handleCallbackTwo}/>\n                        <button className=\"btn btn-success\" onClick={this.sendThr}>submit</button>\n                    </div>\n                </Collapse>\n            </div>)\n        }\n}\n\nexport default Thresholds","import React, { useState } from 'react'\nimport NumericInput from 'react-numeric-input'\nimport reportValidity from 'report-validity'\nimport axios from 'axios';\n\nclass TotalTime extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { Time: 0 };\n    }\n    // onChange(e) {\n    //     this.setState({\n    //         value: e.target.value\n    //     })\n    // }\n    // getInputValue = (e) =>{\n    //     this.props.parentCallback(e.target.value);\n    // };\n    getInputValue = (event) => {\n        // show the user input value to console\n        this.setState({ Time: event.target.value });\n        // console.log(userValue);\n    }\n    sendTime = (() => {\n        let form = document.getElementById('totalTimeSection');\n        let res = reportValidity(form);\n        if (res) {\n            axios.post(\"http://127.0.0.1:8080/api/time/\", { totalTime: this.state.Time })\n                .then(res => {\n                    console.log(res);\n                    console.log(res.data);\n                })\n        }\n    }\n    )\n    render() {\n        return (\n            <div>\n                <form id='totalTimeSection'>\n                    <label htmlFor=\"\" className='totalTimeTitle'>Total Estimated Time (in minutes)</label>\n                    <br />\n                    <label htmlFor=\"\" className='totalTime'>Time estimated to complete assignment</label>\n                    <input type=\"number\"\n                        title=\"Rate\"\n                        id=\"totalTime\"\n                        className=\"form-control\"\n                        min=\"0\"\n                        max=\"6000\"\n                        step=\"1\"\n                        onChange={this.getInputValue}\n                    />\n                    <button className=\"btn btn-success\" onClick={this.sendTime}>Submit</button>\n                    {/* <NumericInput className=\"form-control\"\n                    value={0}\n                    min={0}\n                    step={1}\n                    precision={0} /> */}\n                </form>\n            </div>\n\n        )\n    }\n}\nexport default TotalTime","import NavBar from \"./components/NavBar\";\nimport FontSettings from \"./components/FontSettings\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from \"react\";\nimport Thresholds from \"./components/Thresholds\";\nimport DocURL from \"./components/DocURL\";\nimport TotalTime from \"./components/TotalTime\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <TotalTime />\n      {/* <DocURL /> */}\n      <FontSettings />\n      <Thresholds />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}